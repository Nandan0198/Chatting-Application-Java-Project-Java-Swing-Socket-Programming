package JAVAPROJECT;

import javax.swing.*;
import javax.swing.border.EmptyBorder;
import java.awt.*;
import java.awt.event.*;
import java.net.*;
import java.io.*;
import java.text.SimpleDateFormat;
import java.util.Calendar;

public class Server implements ActionListener {

    private static final Color INSTAGRAM_PURPLE = new Color(142, 68, 173);
    private static final Color INSTAGRAM_PINK = new Color(225, 48, 108);

    private JTextField text;
    private static Box vertical = Box.createVerticalBox();
    private static JFrame frame = new JFrame();
    private static DataOutputStream dout;

    public Server() {
        buildUI();
    }

    private void buildUI() {
        frame.setLayout(null);
        frame.setSize(450, 700);
        frame.setLocation(200, 50);
        frame.setUndecorated(true);
        frame.getRootPane().setBorder(BorderFactory.createLineBorder(Color.BLACK));
        frame.getContentPane().setBackground(Color.WHITE);

        // Gradient title bar
        JPanel titleBar = new JPanel() {
            @Override
            protected void paintComponent(Graphics g) {
                Graphics2D g2d = (Graphics2D) g;
                GradientPaint gp = new GradientPaint(0, 0, INSTAGRAM_PINK, getWidth(), 0, INSTAGRAM_PURPLE);
                g2d.setPaint(gp);
                g2d.fillRect(0, 0, getWidth(), getHeight());
            }
        };
        titleBar.setLayout(null);
        titleBar.setBounds(0, 0, 450, 70);
        frame.add(titleBar);

        // Close label
        JLabel close = new JLabel("\u2715");
        close.setBounds(10, 20, 25, 25);
        close.setForeground(Color.WHITE);
        close.setFont(new Font("Dialog", Font.BOLD, 18));
        close.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        close.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                System.exit(0);
            }
        });
        titleBar.add(close);

        // Name label
        JLabel name = new JLabel("ME");
        name.setBounds(50, 15, 200, 25);
        name.setForeground(Color.WHITE);
        name.setFont(new Font("Segoe UI", Font.BOLD, 20));
        titleBar.add(name);

        // Status label
        JLabel status = new JLabel("Active Now");
        status.setBounds(50, 40, 200, 20);
        status.setForeground(Color.WHITE);
        status.setFont(new Font("Segoe UI", Font.PLAIN, 14));
        titleBar.add(status);

        // Chat area panel
        JPanel chatPanel = new JPanel(new BorderLayout());
        chatPanel.setBounds(5, 75, 440, 570);
        chatPanel.setOpaque(false);
        frame.add(chatPanel);

        // Scroll pane with vertical Box for messages
        JScrollPane scroll = new JScrollPane(vertical);
        scroll.setBorder(null);
        scroll.setOpaque(false);
        scroll.getViewport().setOpaque(false);
        chatPanel.add(scroll, BorderLayout.CENTER);

        // Text input
        text = new JTextField();
        text.setBounds(5, 655, 310, 40);
        text.setFont(new Font("Segoe UI", Font.PLAIN, 16));
        text.setBorder(BorderFactory.createCompoundBorder(
                BorderFactory.createLineBorder(new Color(230, 230, 230)),
                BorderFactory.createEmptyBorder(5, 10, 5, 10)));
        frame.add(text);

        // Send button
        JButton send = new JButton("Send");
        send.setBounds(320, 655, 123, 40);
        send.setFont(new Font("Segoe UI", Font.BOLD, 16));
        send.setFocusPainted(false);
        send.setForeground(Color.WHITE);
        send.setBackground(avgGradient());
        send.setBorderPainted(false);
        send.addActionListener(this);
        frame.add(send);

        text.addActionListener(this);

        frame.setVisible(true);
    }

    // Color between pink and purple for bubble & button
    private static Color avgGradient() {
        return new Color(
                (INSTAGRAM_PURPLE.getRed() + INSTAGRAM_PINK.getRed()) / 2,
                (INSTAGRAM_PURPLE.getGreen() + INSTAGRAM_PINK.getGreen()) / 2,
                (INSTAGRAM_PURPLE.getBlue() + INSTAGRAM_PINK.getBlue()) / 2);
    }

    // Action for send button and Enter key
    @Override
    public void actionPerformed(ActionEvent e) {
        try {
            String message = text.getText().trim();
            if (message.isEmpty()) return;

            JPanel bubble = createBubble(message, true);
            appendBubble(bubble, SwingConstants.RIGHT);

            dout.writeUTF(message);  // send message to client
            text.setText("");

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    // Add bubble panel to vertical Box aligned left/right
    private void appendBubble(JPanel bubble, int alignment) {
        JPanel wrapper = new JPanel(new BorderLayout());
        wrapper.setOpaque(false);
        if (alignment == SwingConstants.RIGHT) {
            wrapper.add(bubble, BorderLayout.LINE_END);
        } else {
            wrapper.add(bubble, BorderLayout.LINE_START);
        }
        vertical.add(wrapper);
        vertical.add(Box.createVerticalStrut(10));
        frame.revalidate();
    }

    // Create a chat bubble with message text and time label
    private static JPanel createBubble(String text, boolean outgoing) {
        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));
        panel.setOpaque(false);

        JLabel msg = new JLabel("<html><p style='width: 180px;'>" + text + "</p></html>");
        msg.setFont(new Font("Segoe UI", Font.PLAIN, 15));
        msg.setBorder(new EmptyBorder(12, 14, 12, 14));
        msg.setOpaque(true);
        msg.setForeground(outgoing ? Color.WHITE : Color.BLACK);
        msg.setBackground(outgoing ? avgGradient() : new Color(240, 240, 240));
        msg.setAlignmentX(outgoing ? Component.RIGHT_ALIGNMENT : Component.LEFT_ALIGNMENT);
        panel.add(msg);

        Calendar cal = Calendar.getInstance();
        SimpleDateFormat sdf = new SimpleDateFormat("HH:mm");
        JLabel time = new JLabel(sdf.format(cal.getTime()));
        time.setFont(new Font("Segoe UI", Font.PLAIN, 11));
        time.setForeground(Color.GRAY);
        time.setAlignmentX(outgoing ? Component.RIGHT_ALIGNMENT : Component.LEFT_ALIGNMENT);
        panel.add(time);

        return panel;
    }

    // Main method: Starts server socket and listens for client connections/messages
    public static void main(String[] args) {
        new Server();
        try {
            ServerSocket serverSocket = new ServerSocket(6001);

            while (true) {
                Socket socket = serverSocket.accept();
                DataInputStream din = new DataInputStream(socket.getInputStream());
                dout = new DataOutputStream(socket.getOutputStream());

                while (true) {
                    String msg = din.readUTF();
                    JPanel bubble = createBubble(msg, false);
                    SwingUtilities.invokeLater(() -> {
                        JPanel wrapper = new JPanel(new BorderLayout());
                        wrapper.setOpaque(false);
                        wrapper.add(bubble, BorderLayout.LINE_START);
                        vertical.add(wrapper);
                        vertical.add(Box.createVerticalStrut(10));
                        frame.revalidate();
                    });
                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
}
